
R Under development (unstable) (2018-08-31 r75222) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(rscala)
> library(microbenchmark)
> 
> cat(system2("hostname",stdout=TRUE),"\n",sep="")
ramah
> scalaConfig()
Read existing configuration file: ~/.rscala/config.R

$scalaCmd
[1] "~/.rscala/scala/bin/scala"

$scalaMajorVersion
[1] "2.12"

$scalaFullVersion
[1] "2.12.6"

$javaCmd
[1] "~/.rscala/java/bin/java"

$javaMajorVersion
[1] 8

$javaArchitecture
[1] 64

$osArchitecture
[1] 64

> sessionInfo()
R Under development (unstable) (2018-08-31 r75222)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.5 LTS

Matrix products: default
BLAS: /usr/lib/libblas/libblas.so.3.6.0
LAPACK: /usr/lib/lapack/liblapack.so.3.6.0

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] microbenchmark_1.4-4 rscala_3.2.0        

loaded via a namespace (and not attached):
[1] compiler_3.6.0
> 
> s <- scala()
> nReps <- 10000
> 
> #####
> 
> rng <- s$.new_scala.util.Random()
> rng$nextInt()      # First-time compilation
[1] -1294981746
> rng$nextInt(1L)    # First-time compilation
[1] 0
> nextInt <- rng$nextInt
> nextInt()          # Alreary compiled
[1] -785737686
> nextInt(1L)        # Alreary compiled
[1] 0
> 
> microbenchmark(
+   s(rng=rng) ^ 'rng.nextInt()',
+   s(rng=rng) * 'rng.nextInt()',
+   rng$.nextInt(),
+   rng$nextInt(),
+   nextInt(),
+   rng$.nextInt(100L),
+   rng$nextInt(100L),
+   nextInt(100L),
+   times=nReps
+ )
Unit: microseconds
                           expr     min       lq     mean   median       uq
   s(rng = rng)^"rng.nextInt()" 160.107 178.7450 199.1785 183.8405 189.3530
 s(rng = rng) * "rng.nextInt()" 122.568 138.4305 174.3101 142.9105 148.2875
                 rng$.nextInt() 133.346 147.0040 164.2756 151.1445 155.1200
                  rng$nextInt() 102.493 111.8795 123.9981 115.8125 118.6880
                      nextInt()  91.717 100.5720 112.1366 104.2370 107.8125
             rng$.nextInt(100L) 146.608 170.3750 188.2406 174.0055 178.1525
              rng$nextInt(100L) 112.887 133.9660 147.7029 138.0685 141.3720
                  nextInt(100L) 102.284 122.6285 135.9087 126.4910 130.3235
        max neval
  15353.167 10000
 206912.979 10000
  15979.930 10000
   1800.089 10000
   1678.119 10000
   2671.235 10000
   4465.889 10000
   2601.748 10000
> 
> proc.time()
   user  system elapsed 
  8.356   4.236  16.566 
