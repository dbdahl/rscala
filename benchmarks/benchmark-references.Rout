
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(rscala)
> library(microbenchmark)
> 
> cat(system2("hostname",stdout=TRUE),"\n",sep="")
ramah
> scalaConfig()

Read existing configuration file: ~/.rscala/config.R

$format
[1] 3

$osArchitecture
[1] 64

$scalaHome
[1] "/home/dahl/local/scala/scala/scala-2.12.7"

$scalaCmd
[1] "/home/dahl/local/scala/scala/scala-2.12.7/bin/scala"

$scalaMajorVersion
[1] "2.12"

$scalaFullVersion
[1] "2.12.7"

$javaHome
[1] "/home/dahl/local/java/jdk-11"

$javaCmd
[1] "/home/dahl/local/java/jdk-11/bin/java"

$javaMajorVersion
[1] 11

$javaArchitecture
[1] 64

$sbtCmd
[1] "/usr/bin/sbt"

> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.5 LTS

Matrix products: default
BLAS: /usr/lib/libblas/libblas.so.3.6.0
LAPACK: /usr/lib/lapack/liblapack.so.3.6.0

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] microbenchmark_1.4-4 rscala_3.2.4        

loaded via a namespace (and not attached):
[1] compiler_3.5.1
> 
> s <- scala()
> nReps <- 10000
> 
> #####
> 
> rng <- s$.new_scala.util.Random()
> rng$nextInt()      # First-time compilation
[1] 1045496758
> rng$nextInt(1L)    # First-time compilation
[1] 0
> nextInt <- rng$nextInt
> nextInt()          # Alreary compiled
[1] 583395597
> nextInt(1L)        # Alreary compiled
[1] 0
> 
> microbenchmark(
+   s(rng=rng) ^ 'rng.nextInt()',
+   s(rng=rng) * 'rng.nextInt()',
+   rng$.nextInt(),
+   rng$nextInt(),
+   nextInt(),
+   rng$.nextInt(100L),
+   rng$nextInt(100L),
+   nextInt(100L),
+   times=nReps
+ )
Unit: microseconds
                           expr     min       lq     mean   median       uq
   s(rng = rng)^"rng.nextInt()" 155.584 185.0530 200.9618 187.1960 190.2125
 s(rng = rng) * "rng.nextInt()" 123.490 145.7925 183.3418 147.4345 149.5570
                 rng$.nextInt() 139.546 151.4930 167.7137 153.6280 156.7060
                  rng$nextInt() 106.338 116.9040 126.7803 118.3075 120.1280
                      nextInt()  93.601 105.2680 113.9867 107.0260 109.3945
             rng$.nextInt(100L) 150.970 174.2975 192.5646 176.6875 179.9375
              rng$nextInt(100L) 116.892 139.5015 150.4589 141.1690 143.3140
                  nextInt(100L) 102.832 127.9855 140.1714 129.9930 132.6250
        max neval
   3539.238 10000
 273808.256 10000
   3920.875 10000
   3658.058 10000
   1781.112 10000
  15673.289 10000
   2397.874 10000
   4403.257 10000
> 
> proc.time()
   user  system elapsed 
  8.420   4.424  17.118 
