
R Under development (unstable) (2018-06-21 r74929) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(rscala)
> library(microbenchmark)
> 
> cat(system2("hostname",stdout=TRUE),"\n",sep="")
sidon
> scalaExec()
SCALA_HOME environment method failed.
Shell PATH method succeeded.
[1] "/home/dahl/local/bin/scala"
> sessionInfo()
R Under development (unstable) (2018-06-21 r74929)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.4 LTS

Matrix products: default
BLAS: /usr/lib/libblas/libblas.so.3.6.0
LAPACK: /usr/lib/lapack/liblapack.so.3.6.0

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] microbenchmark_1.4-4       rscala_3.0.0-20180625-2052

loaded via a namespace (and not attached):
[1] compiler_3.6.0
> 
> scala()
> nReps <- 10000
> 
> #####
> 
> rng <- s$.new_scala.util.Random()
> rng$nextInt()      # First-time compilation
[1] -1728996459
> rng$nextInt(1L)    # First-time compilation
[1] 0
> nextInt <- rng$nextInt
> nextInt()          # Alreary compiled
[1] -1541984906
> nextInt(1L)        # Alreary compiled
[1] 0
> 
> microbenchmark(
+   s(rng=rng) ^ 'rng.nextInt()',
+   s(rng=rng) * 'rng.nextInt()',
+   rng$.nextInt(),
+   rng$nextInt(),
+   nextInt(),
+   rng$.nextInt(100L),
+   rng$nextInt(100L),
+   nextInt(100L),
+   times=nReps
+ )
Unit: microseconds
                           expr     min       lq     mean   median       uq
   s(rng = rng)^"rng.nextInt()" 164.075 205.2350 237.2866 216.9325 244.1050
 s(rng = rng) * "rng.nextInt()" 123.494 158.2720 217.9952 169.2175 192.5110
                 rng$.nextInt() 131.670 166.4270 192.7973 175.8305 196.2790
                  rng$nextInt() 100.543 124.9630 146.2238 133.3815 151.3895
                      nextInt()  89.253 112.2265 130.3174 120.4785 137.7880
             rng$.nextInt(100L) 150.344 190.1135 220.6518 201.9165 227.4155
              rng$nextInt(100L) 109.550 147.9970 171.3108 158.6200 181.8950
                  nextInt(100L) 103.707 135.3465 158.6405 145.4695 169.4935
        max neval
  21273.955 10000
 349728.968 10000
   7122.651 10000
   7653.008 10000
   2631.598 10000
   4819.562 10000
   7141.707 10000
   8441.555 10000
> 
> proc.time()
   user  system elapsed 
 10.771   4.021  20.491 
