
R Under development (unstable) (2018-06-21 r74929) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(rscala)
> library(microbenchmark)
> 
> cat(system2("hostname",stdout=TRUE),"\n",sep="")
sidon
> scalaInfo()

Search details:
    SCALA_HOME environment variable is not set.
    Looking for Scala using PATH environment variable.
    Found 'scala' at /home/dahl/local/scala/scala/scala-2.12.3/bin/scala.

$cmd
[1] "/home/dahl/local/scala/scala/scala-2.12.3/bin/scala"

$fullVersion
[1] "2.12.3"

$majorVersion
[1] "2.12"

> sessionInfo()
R Under development (unstable) (2018-06-21 r74929)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.4 LTS

Matrix products: default
BLAS: /usr/lib/libblas/libblas.so.3.6.0
LAPACK: /usr/lib/lapack/liblapack.so.3.6.0

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] microbenchmark_1.4-4       rscala_3.0.0-20180626-2217

loaded via a namespace (and not attached):
[1] compiler_3.6.0
> 
> scala()
> nReps <- 10000
> 
> #####
> 
> rng <- s$.new_scala.util.Random()
> rng$nextInt()      # First-time compilation
[1] -792831832
> rng$nextInt(1L)    # First-time compilation
[1] 0
> nextInt <- rng$nextInt
> nextInt()          # Alreary compiled
[1] -1017684677
> nextInt(1L)        # Alreary compiled
[1] 0
> 
> microbenchmark(
+   s(rng=rng) ^ 'rng.nextInt()',
+   s(rng=rng) * 'rng.nextInt()',
+   rng$.nextInt(),
+   rng$nextInt(),
+   nextInt(),
+   rng$.nextInt(100L),
+   rng$nextInt(100L),
+   nextInt(100L),
+   times=nReps
+ )
Unit: microseconds
                           expr     min       lq     mean   median       uq
   s(rng = rng)^"rng.nextInt()" 162.045 187.0535 282.3754 215.1845 233.9425
 s(rng = rng) * "rng.nextInt()" 119.156 142.7660 176.9193 169.2480 183.5230
                 rng$.nextInt() 134.506 151.7950 193.7930 172.8705 188.3230
                  rng$nextInt() 101.602 113.1215 143.3687 133.9150 144.9825
                      nextInt()  89.938 101.0080 128.9036 121.4820 131.9680
             rng$.nextInt(100L) 153.123 172.9170 219.1881 200.7180 218.1345
              rng$nextInt(100L) 116.423 133.7930 170.5802 161.2205 174.4665
                  nextInt(100L) 101.707 121.4330 157.0159 147.5025 160.5310
        max neval
 504227.244 10000
   2849.633 10000
  20742.491 10000
   2957.731 10000
   2569.333 10000
   6961.478 10000
   5134.267 10000
  20889.422 10000
> 
> proc.time()
   user  system elapsed 
 11.021   3.571  21.637 
