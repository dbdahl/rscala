
R Under development (unstable) (2023-01-21 r83656) -- "Unsuffered Consequences"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(rscala)
> library(microbenchmark)
> 
> cat(system2("hostname",stdout=TRUE),"\n",sep="")
abish
> scalaConfig()

Read configuration file from rscala home: /home/dahl/.rscala/config.R

$format
[1] 4

$scalaHome
[1] "/home/dahl/.rscala/scala"

$scalaCmd
[1] "/home/dahl/.rscala/scala/bin/scala"

$scalaMajorVersion
[1] "2.13"

$scalaFullVersion
[1] "2.13.10"

$javaHome
[1] "/home/dahl/.rscala/java/jre"

$javaCmd
[1] "/home/dahl/.rscala/java/bin/java"

$javaMajorVersion
[1] 8

$javaArchitecture
[1] 64

$sbtCmd
[1] "/home/dahl/.rscala/sbt/bin/sbt"

> sessionInfo()
R Under development (unstable) (2023-01-21 r83656)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Pop!_OS 22.04 LTS

Matrix products: default
BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

time zone: America/Denver
tzcode source: system (glibc)

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] microbenchmark_1.4.9 rscala_3.2.20       

loaded via a namespace (and not attached):
[1] compiler_4.3.0 tools_4.3.0   
> 
> s <- scala()
> nReps <- 10000
> 
> #####
> 
> rng <- s$.new_scala.util.Random()
> rng$nextInt()      # First-time compilation
       x1.nextInt
          ^
On line 3: warning: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method nextInt,
       or remove the empty argument list from its definition (Java-defined methods are exempt).
       In Scala 3, an unapplied method like this will be eta-expanded into a function.
[1] -745831601
> rng$nextInt(1L)    # First-time compilation
[1] 0
> nextInt <- rng$nextInt
> nextInt()          # Alreary compiled
[1] -1052981189
> nextInt(1L)        # Alreary compiled
[1] 0
> 
> microbenchmark(
+   s(rng=rng) ^ 'rng.nextInt()',
+   s(rng=rng) * 'rng.nextInt()',
+   rng$.nextInt(),
+   rng$nextInt(),
+   nextInt(),
+   rng$.nextInt(100L),
+   rng$nextInt(100L),
+   nextInt(100L),
+   times=nReps
+ )
Unit: microseconds
                           expr     min       lq     mean   median       uq
   s(rng = rng)^"rng.nextInt()" 156.511 182.6590 241.4904 189.0610 211.0890
 s(rng = rng) * "rng.nextInt()" 124.660 142.6950 166.0117 146.9390 163.1945
                 rng$.nextInt() 132.573 147.7510 176.6596 153.0820 169.6555
                  rng$nextInt()  97.775 111.9985 131.0998 115.4715 126.7290
                      nextInt()  84.914 103.2745 122.6861 106.7965 117.2325
             rng$.nextInt(100L) 143.738 169.6515 201.7519 175.8720 196.4305
              rng$nextInt(100L) 110.593 133.8945 155.5879 138.0840 152.1240
                  nextInt(100L) 108.374 125.0865 145.7246 129.3420 142.0600
        max neval
 267236.644 10000
   5468.164 10000
  19060.079 10000
   2870.291 10000
   4643.269 10000
  19477.695 10000
   3634.331 10000
   3037.648 10000
> 
> proc.time()
   user  system elapsed 
 10.038   4.474  18.407 
