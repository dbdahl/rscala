
R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(rscala)
> library(microbenchmark)
> 
> cat(system2("hostname",stdout=TRUE),"\n",sep="")
sidon
> scalaExec()
SCALA_HOME environment method failed.
Shell PATH method succeeded.
[1] "/home/dahl/local/bin/scala"
> sessionInfo()
R version 3.5.0 (2018-04-23)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.4 LTS

Matrix products: default
BLAS: /usr/lib/libblas/libblas.so.3.6.0
LAPACK: /usr/lib/lapack/liblapack.so.3.6.0

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] microbenchmark_1.4-4       rscala_3.0.0-20180624-0605

loaded via a namespace (and not attached):
[1] compiler_3.5.0
> 
> scala()
> nReps <- 100
> 
> #####
> 
> big <- rnorm(10000000)
> microbenchmark(
+   s(x=big) %.~% 'x',
+   s(x=big) %~% 'x',
+   times=nReps
+ )
Unit: milliseconds
                expr      min       lq     mean   median       uq       max
 s(x = big) %.~% "x" 131.3575 138.3473 149.3822 139.7742 144.0116  310.7643
  s(x = big) %~% "x" 349.1947 357.0316 433.3677 374.2730 436.2901 3769.4973
 neval
   100
   100
>  
> s %~% "true"    # Is everything still okay?
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
 14.604  14.378  60.771 
