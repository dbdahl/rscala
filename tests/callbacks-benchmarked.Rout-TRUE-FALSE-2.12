> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hilton # TRUE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min          lq        mean       median          uq
 doit0(rnorm(10))     67.241     136.401     589.236     165.5575     198.720
 doit1(rnorm(10)) 864386.937 1173803.336 1263552.970 1260883.3120 1361046.827
 doit2(rnorm(10)) 499324.851  560220.757  737975.153  696451.8175  863900.963
 doit3(rnorm(10))   2964.822    4841.701   15927.351    6646.9480    8872.633
         max neval
    4539.428    10
 1651313.756    10
 1086226.197    10
   94962.190    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq      mean   median        uq      max
 doit0(rnorm(10))   32.648   68.8115  119.7743   84.431  117.6055 21098.61
 doit3(rnorm(10)) 1777.128 3123.8890 4870.6606 3642.563 4161.9560 71581.51
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr       min        lq      mean    median        uq       max
 doit0(rnorm(10))  200.4822  200.5149  201.8249  200.5610  200.5875  206.9787
 doit1(rnorm(10)) 1234.4979 1249.1951 1334.1116 1335.0193 1422.8644 1428.9813
 doit2(rnorm(10))  712.1139  756.5524  832.3972  835.3470  873.6320  984.3405
 doit3(rnorm(10))  204.2136  204.2760  205.3094  204.6577  204.8530  208.5470
 neval
     5
     5
     5
     5
> 
> 
