> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hunter # TRUE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr         min          lq         mean      median          uq
 doit0(rnorm(10))      74.924     133.235     707.6251     140.698     166.814
 doit1(rnorm(10)) 1017010.602 1144688.132 1397940.6460 1376632.915 1584787.458
 doit2(rnorm(10))  540364.304  650863.643  787357.0690  732708.272  897058.152
 doit3(rnorm(10))    4094.640    4489.441   21585.3636   12854.218   20548.089
         max neval
    5874.983    10
 1834040.740    10
 1206161.462    10
  100716.915    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq       mean    median       uq      max
 doit0(rnorm(10))   34.245   67.2695   90.08326   80.4395  114.070   755.79
 doit3(rnorm(10)) 1845.431 2461.3870 4131.02606 3596.8025 4202.327 28831.83
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr       min        lq      mean    median        uq       max
 doit0(rnorm(10))  200.4553  200.4595  200.4881  200.4679  200.5199  200.5377
 doit1(rnorm(10)) 1003.5787 1195.7407 1230.5399 1291.0365 1297.4514 1364.8924
 doit2(rnorm(10))  623.0640  700.6574  754.1911  741.7915  774.1436  931.2989
 doit3(rnorm(10))  203.6756  204.2907  206.5570  204.5725  204.9226  215.3237
 neval
     5
     5
     5
     5
> 
> 
