> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # carter # FALSE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median         uq
 doit0(rnorm(10))     61.013    111.430    590.5634    141.9755    174.067
 doit1(rnorm(10)) 673518.474 824761.945 907777.5754 920501.0290 967988.440
 doit2(rnorm(10)) 342027.314 412431.622 540399.4827 479918.9060 656994.759
 doit3(rnorm(10))   1853.145   2640.971  73560.8270   4197.9720  10239.089
         max neval
    4727.124    10
 1159907.312    10
  892334.608    10
  610419.516    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq       mean    median       uq       max
 doit0(rnorm(10))   30.373   55.8445   78.51531   71.8905   96.033   242.129
 doit3(rnorm(10)) 1334.347 1754.0290 3075.80609 2585.0155 3135.296 61414.415
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq      mean    median        uq       max
 doit0(rnorm(10)) 200.4719 200.4725  200.5337  200.5125  200.5972  200.6147
 doit1(rnorm(10)) 915.0205 960.6071 1079.8194 1153.2062 1172.9082 1197.3553
 doit2(rnorm(10)) 584.7034 640.7661  769.9688  727.2253  826.6709 1070.4783
 doit3(rnorm(10)) 203.4469 203.6324  207.8472  208.3371  210.5605  213.2593
 neval
     5
     5
     5
     5
> 
> 
