> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hilton # FALSE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min          lq         mean       median          uq
 doit0(rnorm(10))     68.293     110.047     753.9572     253.6905     359.278
 doit1(rnorm(10)) 946851.011 1091447.966 1181851.4169 1181545.4755 1306493.743
 doit2(rnorm(10)) 395024.115  552743.154  650052.6126  614024.1465  709762.637
 doit3(rnorm(10))   2712.271    5547.770   22259.6215    7361.3140   13546.537
         max neval
    5546.854    10
 1389277.698    10
 1057399.543    10
  134994.728    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq       mean    median       uq       max
 doit0(rnorm(10))   33.207   58.249   91.58568   76.1875  109.611   1541.23
 doit3(rnorm(10)) 1307.915 1712.546 3667.73682 2450.4120 3204.358 817028.40
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min        lq      mean    median        uq       max
 doit0(rnorm(10)) 200.4530  200.4566  201.1456  200.4714  200.4747  203.8726
 doit1(rnorm(10)) 921.5586 1025.1917 1133.3755 1026.8310 1280.0643 1413.2322
 doit2(rnorm(10)) 665.8195  681.3354  741.6544  685.6077  791.0135  884.4958
 doit3(rnorm(10)) 203.1865  203.3486  204.8148  203.6066  203.9182  210.0141
 neval
     5
     5
     5
     5
> 
> 
