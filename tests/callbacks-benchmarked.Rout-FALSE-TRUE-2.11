> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hunter # FALSE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean     median          uq
 doit0(rnorm(10))     32.896    137.581    450.9175    191.838     215.085
 doit1(rnorm(10)) 629320.393 723664.688 942287.1703 888990.269 1046023.564
 doit2(rnorm(10)) 482906.657 608819.007 633872.5351 622616.186  677654.808
 doit3(rnorm(10))   2259.161   5277.734  27063.5645  10384.751   16411.574
         max neval
    3088.891    10
 1508504.527    10
  806711.381    10
  172451.277    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq      mean   median        uq       max
 doit0(rnorm(10))   29.858   74.059  124.2232   92.826  127.0075  14895.98
 doit3(rnorm(10)) 1602.717 2907.001 5941.2315 3151.006 3945.6710 564704.46
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min        lq      mean    median        uq       max
 doit0(rnorm(10)) 200.4323  200.4678  200.5159  200.5199  200.5554  200.6043
 doit1(rnorm(10)) 972.9916 1038.8043 1117.4892 1100.9365 1234.7642 1239.9493
 doit2(rnorm(10)) 636.5247  718.9360  811.4583  832.8677  866.7468 1002.2164
 doit3(rnorm(10)) 203.9069  203.9397  214.6148  210.3749  223.4731  231.3792
 neval
     5
     5
     5
     5
> 
> 
