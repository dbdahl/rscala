> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hilton # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median         uq
 doit0(rnorm(10))     43.201     79.592    634.2828    221.1125    280.645
 doit1(rnorm(10)) 685862.421 830114.315 908439.0531 934066.2935 982535.664
 doit2(rnorm(10)) 372125.429 456217.810 622221.5724 618019.3820 721220.222
 doit3(rnorm(10))   2482.487   3445.162  18105.1906   4656.1915  25245.329
         max neval
    4688.146    10
 1056864.401    10
 1051546.458    10
   89716.302    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq      mean    median       uq       max
 doit0(rnorm(10))   34.798   73.4775  133.2039   90.0785  131.877  23215.17
 doit3(rnorm(10)) 1372.291 2375.2220 4731.5649 3037.9280 3597.776 634799.42
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min        lq      mean    median        uq       max
 doit0(rnorm(10)) 200.5181  200.5300  200.5475  200.5507  200.5656  200.5734
 doit1(rnorm(10)) 931.5976 1013.7916 1086.5040 1036.9235 1154.8760 1295.3313
 doit2(rnorm(10)) 555.8953  631.3139  738.2756  702.8459  804.6608  996.6623
 doit3(rnorm(10)) 203.9181  204.0543  208.8047  204.3427  212.0543  219.6541
 neval
     5
     5
     5
     5
> 
> 
