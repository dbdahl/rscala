> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # carter # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median          uq
 doit0(rnorm(10))     38.206    128.527    407.7452    154.3825     167.652
 doit1(rnorm(10)) 556449.538 812966.206 939817.6257 911132.5450 1087830.459
 doit2(rnorm(10)) 336684.048 512420.747 648001.0585 608080.5100  720056.109
 doit3(rnorm(10))   2049.572   2653.542  14768.0559   6420.1965   10828.257
         max neval
    2911.544    10
 1294939.823    10
 1115272.475    10
   86408.021    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq       mean   median       uq       max
 doit0(rnorm(10))   32.289   64.2085   82.73615   76.639   98.485  1974.111
 doit3(rnorm(10)) 1357.374 2331.1150 4373.51366 2803.470 3088.688 55619.391
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min        lq      mean    median        uq       max
 doit0(rnorm(10)) 200.4375  200.4463  200.4672  200.4475  200.4515  200.5533
 doit1(rnorm(10)) 980.8301 1140.2871 1172.2153 1141.1428 1229.9615 1368.8549
 doit2(rnorm(10)) 691.7706  767.6116  858.7809  784.1171  971.8451 1078.5602
 doit3(rnorm(10)) 203.3228  203.5115  209.6134  205.5956  209.6655  225.9714
 neval
     5
     5
     5
     5
> 
> 
