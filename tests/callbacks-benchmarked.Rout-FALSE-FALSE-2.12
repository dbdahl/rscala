> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # carter # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr         min          lq         mean       median         uq
 doit0(rnorm(10))      37.131      69.782     444.3397     188.8945     223.48
 doit1(rnorm(10)) 1214637.603 1363333.549 1481029.8508 1407939.0420 1750392.22
 doit2(rnorm(10))  630180.927  646622.814  772632.4647  709766.0375  880422.34
 doit3(rnorm(10))    2520.175    3235.407   14093.3567    4508.2775   10848.04
         max neval
    3128.671    10
 1866674.385    10
 1136425.089    10
   85884.868    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq      mean   median       uq       max neval
 doit0(rnorm(10))   30.441   57.761   81.8456   73.948   95.204  1651.673  1000
 doit3(rnorm(10)) 1273.021 1755.550 3048.6301 2498.883 3053.610 32805.016  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr       min        lq      mean    median        uq       max
 doit0(rnorm(10))  200.4353  200.5645  203.0595  200.5659  201.9193  211.8123
 doit1(rnorm(10)) 1187.9196 1363.3611 1478.1044 1466.4848 1559.4119 1813.3449
 doit2(rnorm(10))  696.2967  733.5020  909.0139  865.2441  989.2815 1260.7451
 doit3(rnorm(10))  203.7451  203.9108  207.1710  205.8438  206.5921  215.7631
 neval
     5
     5
     5
     5
> 
> 
