> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hilton # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min          lq         mean      median          uq
 doit0(rnorm(10))      68.80      97.537     589.6371     170.479     201.693
 doit1(rnorm(10)) 1305552.73 1327250.834 1470426.4247 1438301.778 1642613.848
 doit2(rnorm(10))  588872.55  620706.804  730526.2117  700654.758  815547.171
 doit3(rnorm(10))    2724.26    3245.971   15101.2890    4066.145   11618.090
         max neval
    4583.625    10
 1679459.472    10
 1034088.657    10
   96395.211    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq      mean    median        uq      max
 doit0(rnorm(10))   32.751   67.6255  115.0543   81.2085  109.9875 20950.17
 doit3(rnorm(10)) 1334.642 2453.8700 3581.2697 2837.3480 3145.0010 44459.36
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr       min        lq      mean    median        uq       max
 doit0(rnorm(10))  200.4962  200.5136  200.5316  200.5418  200.5489  200.5575
 doit1(rnorm(10)) 1230.9381 1398.4946 1401.8043 1436.9341 1464.6664 1477.9883
 doit2(rnorm(10))  803.9871  827.5165  919.8323  922.5028  999.2441 1045.9112
 doit3(rnorm(10))  203.4297  203.8103  206.2841  203.8400  204.1906  216.1497
 neval
     5
     5
     5
     5
> 
> 
