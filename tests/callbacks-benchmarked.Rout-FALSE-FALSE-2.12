> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hunter # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr         min          lq         mean       median          uq
 doit0(rnorm(10))      54.411      91.444     742.2029     177.0515     196.588
 doit1(rnorm(10)) 1014779.560 1118802.059 1219178.8372 1200587.1415 1303906.960
 doit2(rnorm(10))  596019.929  630221.789  684492.7182  652519.8690  704820.543
 doit3(rnorm(10))    2438.115    3634.904   12382.5323    4423.3250    5473.735
         max neval
    6122.744    10
 1506715.677    10
  868890.727    10
   84682.947    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq      mean    median        uq       max
 doit0(rnorm(10))   32.420   69.7055  101.9797   84.0145  114.2495  8366.445
 doit3(rnorm(10)) 1479.288 2659.5690 3754.1674 2956.9445 3218.3220 41274.269
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr       min        lq      mean    median        uq       max
 doit0(rnorm(10))  200.4530  200.7070  204.0199  202.4389  207.5749  208.9257
 doit1(rnorm(10)) 1072.7697 1230.6565 1236.6313 1240.1663 1278.3359 1361.2281
 doit2(rnorm(10))  670.4037  717.2545  757.5230  745.2134  762.5540  892.1896
 doit3(rnorm(10))  203.0964  203.4442  204.3498  203.5557  204.1358  207.5171
 neval
     5
     5
     5
     5
> 
> 
