> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # carter # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean     median         uq
 doit0(rnorm(10))     75.970    112.540    636.3791    183.525    205.788
 doit1(rnorm(10)) 436702.622 517578.211 744261.2933 717857.026 909651.406
 doit2(rnorm(10)) 202209.831 275089.209 367954.0836 377168.305 472907.093
 doit3(rnorm(10))   3516.484   4084.859  23439.2088   6438.385  36512.268
         max neval
    4975.186    10
 1133702.168    10
  477699.210    10
  112863.757    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq       mean   median       uq       max
 doit0(rnorm(10))   31.428   67.7165   98.78658   82.638  121.355  5791.016
 doit3(rnorm(10)) 1463.111 2641.8030 5004.95546 2997.970 3492.491 79245.587
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.4412 200.4630 200.4893 200.4811 200.4942 200.5668     5
 doit1(rnorm(10)) 509.8926 578.7125 585.4774 590.1116 596.7668 651.9037     5
 doit2(rnorm(10)) 493.5346 505.1971 560.2722 546.5472 620.3203 635.7617     5
 doit3(rnorm(10)) 203.1888 203.5129 203.7861 203.5554 203.8256 204.8480     5
> 
> 
