> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hilton # TRUE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median         uq
 doit0(rnorm(10))     82.070     91.923    700.7822    145.6875    173.937
 doit1(rnorm(10)) 340388.982 591697.687 688403.3150 659369.0530 777529.608
 doit2(rnorm(10)) 263520.972 342757.759 419572.6689 416452.0975 495226.274
 doit3(rnorm(10))   4471.434   4571.546  20853.6044   9280.8635  30264.780
         max neval
    5815.608    10
 1165168.083    10
  647108.865    10
   84097.143    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq      mean    median        uq       max
 doit0(rnorm(10))   33.232   69.8775  114.8158   82.9165  118.6465  9407.239
 doit3(rnorm(10)) 1801.892 3306.0800 5686.9062 3681.1305 4460.3490 81116.985
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.4383 200.4462 200.4895 200.4539 200.4820 200.6271     5
 doit1(rnorm(10)) 507.2516 529.3352 621.2774 655.3778 694.6559 719.7666     5
 doit2(rnorm(10)) 469.1025 478.1782 534.0405 493.0885 507.1392 722.6942     5
 doit3(rnorm(10)) 203.4389 204.2287 205.4904 204.7510 205.2477 209.7859     5
> 
> 
