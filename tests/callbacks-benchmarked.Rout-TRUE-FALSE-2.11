> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hilton # TRUE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean     median         uq
 doit0(rnorm(10))     88.519    196.852    841.7046    236.197    317.784
 doit1(rnorm(10)) 631797.080 799582.880 874577.4365 854090.942 988372.424
 doit2(rnorm(10)) 469536.058 498037.180 594368.8923 563758.560 705790.772
 doit3(rnorm(10))   5366.676   6834.524  22446.5108   8741.681  16070.049
        max neval
    6421.55    10
 1167563.78    10
  835214.17    10
  126852.77    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq      mean   median       uq        max
 doit0(rnorm(10))   39.500   74.414  113.8593   97.344  145.616    433.704
 doit3(rnorm(10)) 1797.864 3550.200 7669.7903 4331.459 6368.346 460950.208
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq      mean    median        uq       max
 doit0(rnorm(10)) 200.4928 200.4985  200.9017  200.5189  200.5341  202.4643
 doit1(rnorm(10)) 796.7053 798.3735 1016.4338 1102.2680 1127.9084 1256.9140
 doit2(rnorm(10)) 606.3260 671.4183  731.4517  748.7136  773.9933  856.8074
 doit3(rnorm(10)) 204.5557 205.0916  207.0858  206.1813  208.4417  211.1590
 neval
     5
     5
     5
     5
> 
> 
