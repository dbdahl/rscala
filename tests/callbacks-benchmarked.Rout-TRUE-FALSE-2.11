> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hunter # TRUE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median          uq
 doit0(rnorm(10))     70.832    152.662    631.9978    165.0545     177.063
 doit1(rnorm(10)) 649807.970 791509.005 961878.5946 942527.1295 1083151.733
 doit2(rnorm(10)) 451826.201 499927.928 624683.4814 603944.4130  659368.025
 doit3(rnorm(10))   4636.811   5651.752  23653.3114  10654.8480   20925.822
         max neval
    4993.461    10
 1439468.396    10
  972252.478    10
  123602.974    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq       mean    median       uq         max
 doit0(rnorm(10))   30.023   65.279   85.71689   79.9975  105.494     254.753
 doit3(rnorm(10)) 1772.247 3200.608 6012.66449 3498.1345 4023.478 1098726.954
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq      mean    median        uq       max
 doit0(rnorm(10)) 200.4022 200.4205  200.4497  200.4316  200.4641  200.5299
 doit1(rnorm(10)) 886.5522 952.3880 1098.4923 1152.0627 1180.6694 1320.7893
 doit2(rnorm(10)) 555.4752 691.8961  678.7848  699.2133  707.8712  739.4684
 doit3(rnorm(10)) 203.7038 204.3800  205.1758  204.5756  204.6833  208.5362
 neval
     5
     5
     5
     5
> 
> 
