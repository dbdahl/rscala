> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hilton # TRUE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median          uq
 doit0(rnorm(10))     79.350    159.494    688.9597    180.2505     195.966
 doit1(rnorm(10)) 782679.848 850379.390 969488.4729 928668.6315 1065585.949
 doit2(rnorm(10)) 379895.584 512270.267 647576.7139 592619.0290  715820.761
 doit3(rnorm(10))   4591.249   6199.032  33860.8999  11101.0290   21214.118
         max neval
    5441.406    10
 1267869.078    10
 1150737.486    10
  213790.145    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq     mean   median       uq        max
 doit0(rnorm(10))   33.426   67.3225   99.327   83.206  120.833   4277.999
 doit3(rnorm(10)) 1728.801 3080.0350 5538.621 3618.947 4307.709 935015.875
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min        lq      mean    median        uq       max
 doit0(rnorm(10)) 200.4289  200.4386  200.6478  200.4658  200.4835  201.4222
 doit1(rnorm(10)) 709.0281 1056.6380 1041.7128 1075.3726 1160.8184 1206.7070
 doit2(rnorm(10)) 692.2886  708.8070  827.7343  782.3562  902.4459 1052.7737
 doit3(rnorm(10)) 204.3005  204.6772  208.7308  205.5024  211.9911  217.1828
 neval
     5
     5
     5
     5
> 
> 
