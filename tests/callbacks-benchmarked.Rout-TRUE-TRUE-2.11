> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # carter # TRUE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median         uq
 doit0(rnorm(10))     83.115     88.738    639.2394    167.5825    183.372
 doit1(rnorm(10)) 585299.158 784911.198 844350.8427 828665.3945 909490.932
 doit2(rnorm(10)) 293449.649 433277.077 523277.4760 518751.4440 586469.424
 doit3(rnorm(10))   2611.152   5531.925  25240.2736   6067.7455   9854.947
       max neval
    4778.6    10
 1133203.5    10
  817796.0    10
  184673.8    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq       mean    median        uq        max
 doit0(rnorm(10))   32.055   61.488   89.40881   74.7715  105.7455   2281.439
 doit3(rnorm(10)) 1640.844 2655.885 4912.38653 3379.9150 3857.4245 885244.812
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq      mean    median        uq       max
 doit0(rnorm(10)) 200.4249 200.4342  201.9455  200.4413  200.4595  207.9676
 doit1(rnorm(10)) 758.9302 972.8478 1021.4619 1022.0621 1175.8350 1177.6343
 doit2(rnorm(10)) 572.0559 723.4088  747.5674  749.8161  844.2747  848.2815
 doit3(rnorm(10)) 204.3963 204.5217  213.0446  210.9416  221.3740  223.9895
 neval
     5
     5
     5
     5
> 
> 
