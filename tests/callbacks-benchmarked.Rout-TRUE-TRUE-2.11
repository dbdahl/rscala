> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hunter # TRUE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq         mean       median          uq
 doit0(rnorm(10))     51.216    116.316     499.2783     162.4955     172.582
 doit1(rnorm(10)) 663483.489 892742.841 1058133.8711 1073139.2295 1166119.060
 doit2(rnorm(10)) 403688.707 477341.164  583681.3066  599736.4630  669517.769
 doit3(rnorm(10))   3345.779   3862.895   12521.4105    4110.4545    6319.629
         max neval
    3799.098    10
 1610786.057    10
  835699.929    10
   81899.717    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq       mean   median       uq         max
 doit0(rnorm(10))   31.306   63.2375   80.32737   73.504  100.934     261.756
 doit3(rnorm(10)) 1799.025 2861.7490 5500.49144 3419.311 3694.374 1067188.021
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min        lq      mean    median        uq       max
 doit0(rnorm(10)) 200.4400  200.4472  201.9931  200.4771  203.8743  204.7269
 doit1(rnorm(10)) 935.4115 1037.3655 1115.8373 1037.5893 1274.9217 1293.8985
 doit2(rnorm(10)) 675.7425  748.5664  777.7669  761.0056  777.2905  926.2294
 doit3(rnorm(10)) 203.6215  204.3489  204.7814  204.5425  204.7248  206.6691
 neval
     5
     5
     5
     5
> 
> 
