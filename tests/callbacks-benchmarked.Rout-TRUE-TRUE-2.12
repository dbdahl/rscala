> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hilton # TRUE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq         mean      median          uq
 doit0(rnorm(10))     50.758    138.867     817.0743     172.311     196.166
 doit1(rnorm(10)) 921286.085 959972.324 1212041.8109 1022191.289 1610424.418
 doit2(rnorm(10)) 513142.099 567143.323  697237.1328  693203.451  783577.816
 doit3(rnorm(10))   3752.297   4582.917   20325.9318    7511.577    9273.357
         max neval
    6831.956    10
 1808096.349    10
 1018793.608    10
  142291.251    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq      mean    median        uq      max
 doit0(rnorm(10))   34.283   70.468  131.9126   86.1625  120.2395 12857.67
 doit3(rnorm(10)) 1873.007 3430.322 5585.2748 3849.4145 4695.6870 76216.51
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr       min        lq      mean    median        uq       max
 doit0(rnorm(10))  200.5301  200.5538  203.2435  200.6315  206.5107  207.9915
 doit1(rnorm(10)) 1372.5513 1394.2013 1429.8356 1395.9336 1436.7356 1549.7564
 doit2(rnorm(10))  776.1959  827.4794  860.1631  856.2442  917.7632  923.1329
 doit3(rnorm(10))  204.9454  205.0688  214.3064  209.8244  218.3700  233.3234
 neval
     5
     5
     5
     5
> 
> 
