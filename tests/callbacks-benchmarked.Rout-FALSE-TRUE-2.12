> source("common.R",print.eval=TRUE)
# R version 3.4.2 (2017-09-28) # hunter # FALSE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min          lq         mean      median          uq
 doit0(rnorm(10))    112.750     132.486     685.0607     170.915     197.481
 doit1(rnorm(10)) 857079.240 1192197.226 1306732.2467 1344531.261 1477118.884
 doit2(rnorm(10)) 514815.080  601501.974  715581.9623  711775.453  815641.906
 doit3(rnorm(10))   2831.177    3430.900   14943.9419    4283.032    6699.909
        max neval
    5350.68    10
 1626643.21    10
  888669.08    10
  104956.21    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq       mean   median       uq      max neval
 doit0(rnorm(10))   30.326   56.666   90.91696   67.525   96.015 14344.29  1000
 doit3(rnorm(10)) 1431.501 1664.378 2831.33525 2621.400 2978.910 37901.29  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr       min        lq      mean    median        uq       max
 doit0(rnorm(10))  200.4175  200.4410  200.4455  200.4456  200.4531  200.4705
 doit1(rnorm(10)) 1091.9158 1157.3791 1242.0127 1171.6091 1346.0654 1443.0938
 doit2(rnorm(10))  688.1527  693.1287  774.4994  761.1896  796.2539  933.7719
 doit3(rnorm(10))  202.8079  203.0787  207.1115  206.1861  211.2625  212.2224
 neval
     5
     5
     5
     5
> 
> 
